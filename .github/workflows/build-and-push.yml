name: Build and Push PostgreSQL Images

on:
  schedule:
    - cron: "0 0 * * 1"  # Every Monday at midnight UTC
  workflow_dispatch:

env:
  LATEST_POSTGRES_MAJOR: 16  # Change this to update which version gets tagged as 'latest'

jobs:
  build-postgres:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write

    strategy:
      matrix:
        postgres_major: [13, 14, 15, 16, 17]

    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      - name: Get latest PostgreSQL version
        id: get_version
        run: |
          # Get the latest minor version for this major version
          FULL_VERSION=$(./get-postgres-version.sh ${{ matrix.postgres_major }})
          echo "full_version=${FULL_VERSION}" >> $GITHUB_OUTPUT
          
          # Extract major.minor (e.g., 16.10 -> 16.10)
          MINOR_VERSION=$(echo $FULL_VERSION | grep -oE '^[0-9]+\.[0-9]+')
          echo "minor_version=${MINOR_VERSION}" >> $GITHUB_OUTPUT
          
          echo "Building PostgreSQL $FULL_VERSION with tags: ${{ matrix.postgres_major }}, ${MINOR_VERSION}, ${FULL_VERSION}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: linux/amd64,linux/arm64

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push with multiple tags
        uses: docker/build-push-action@v5
        with:
          file: Dockerfile.${{ matrix.postgres_major }}
          platforms: linux/arm64,linux/amd64
          push: true
          build-args: |
            POSTGRES_VERSION=${{ steps.get_version.outputs.full_version }}
          tags: |
            ghcr.io/${{ github.repository }}:${{ matrix.postgres_major }}
            ghcr.io/${{ github.repository }}:${{ steps.get_version.outputs.minor_version }}
            ghcr.io/${{ github.repository }}:${{ steps.get_version.outputs.full_version }}
            ${{ matrix.postgres_major == env.LATEST_POSTGRES_MAJOR && format('ghcr.io/{0}:latest', github.repository) || '' }}

